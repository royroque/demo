begin
  require 'rake'
  require 'rspec/core/rake_task'  
  #require 'parallel_tests'
  #require "parallel_tests/tasks"
  #require 'parallel_tests/cli'
  
  desc "Run Template Test Suite"
  RSpec::Core::RakeTask.new(:template) do |t|
    STDOUT.sync = true
    t.fail_on_error = false
    product = 'template'
    t.pattern = Dir.glob("spec/**/#{product}_spec.rb")
    t.rspec_opts = "--format documentation -o ./logs/#{product}.log --format html --out ./logs/#{product}.html --require yarjuf --format JUnit  --out ./logs/#{product}.xml"
  end
 
  task :default => :regression
  task :regression => [:template]
  
=begin 
  ##To run parallel_test ; run rake "parallel:spec[2]"
  desc "Parallel spec tests"
  task :parallel_spec do
    #Rake::Task[:spec_prep].invoke
    ParallelTests::CLI.new.run('--type test -t rspec spec'.split)
    #Rake::Task[:spec_clean].invoke
  end
=end

rescue LoadError
  puts "rspec available"
end
